@use 'sass:color';
@use 'variables' as *;

// SCSS Mixins 文件
// 定义项目中常用的样式混合器

// 响应式断点 Mixin
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  }
  @if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  }
  @if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  }
  @if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  }
  @if $breakpoint == 2xl {
    @media (min-width: $breakpoint-2xl) {
      @content;
    }
  }
}

// Flexbox 布局 Mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// 文本省略 Mixins
@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-ellipsis-multiline($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// 按钮样式 Mixin
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-md;
  border: $border-width solid transparent;
  border-radius: $border-radius-md;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  line-height: 1.5;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-normal;
  user-select: none;

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.25);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-variant($bg-color, $text-color: white, $hover-bg: color.adjust($bg-color, $lightness: -10%)) {
  background-color: $bg-color;
  color: $text-color;
  border-color: $bg-color;

  &:hover:not(:disabled) {
    background-color: $hover-bg;
    border-color: $hover-bg;
  }

  &:active {
    background-color: color.adjust($bg-color, $lightness: -15%);
    border-color: color.adjust($bg-color, $lightness: -15%);
  }
}

@mixin button-outline($color) {
  background-color: transparent;
  color: $color;
  border-color: $color;

  &:hover:not(:disabled) {
    background-color: $color;
    color: white;
  }
}

// 卡片样式 Mixin
@mixin card {
  background-color: white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-md;
  padding: $spacing-lg;
  transition: box-shadow $transition-normal;

  &:hover {
    box-shadow: $shadow-lg;
  }
}

// 输入框样式 Mixin
@mixin input-base {
  display: block;
  width: 100%;
  padding: $spacing-sm $spacing-md;
  font-size: $font-size-base;
  line-height: 1.5;
  color: $gray-900;
  background-color: white;
  border: $border-width solid $gray-300;
  border-radius: $border-radius-md;
  transition: border-color $transition-fast, box-shadow $transition-fast;

  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.1);
  }

  &::placeholder {
    color: $gray-500;
  }

  &:disabled {
    background-color: $gray-100;
    opacity: 1;
  }
}

// 动画 Mixins
@mixin fade-in($duration: $transition-normal) {
  animation: fadeIn $duration ease-in-out;
}

@mixin slide-up($duration: $transition-normal) {
  animation: slideUp $duration ease-out;
}

@mixin bounce-in($duration: 0.6s) {
  animation: bounceIn $duration ease-out;
}

// 工具类 Mixins
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  
  &::before {
    content: '';
    display: block;
    padding-top: percentage($height / $width);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// 渐变 Mixins
@mixin gradient-horizontal($start-color, $end-color) {
  background: linear-gradient(to right, $start-color, $end-color);
}

@mixin gradient-vertical($start-color, $end-color) {
  background: linear-gradient(to bottom, $start-color, $end-color);
}

@mixin gradient-diagonal($start-color, $end-color) {
  background: linear-gradient(45deg, $start-color, $end-color);
}